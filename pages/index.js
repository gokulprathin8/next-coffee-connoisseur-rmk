import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Banner from "../components/banner";
import Card from "../components/card";

// import coffeeStores from "../data/coffee-stores.json";
import {fetchCoffeeStores} from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";
import {useContext, useEffect, useState} from "react";
import {ACTION_TYPE, StoreContext} from "./_app";

export async function getStaticProps(context) {

    const coffeeStores = await fetchCoffeeStores();
    return {
        props: {
            coffeeStores: coffeeStores
        }
    }
}

export default function Home(props) {
    // const [coffeeStores, setCoffeeStores] = useState('');
    const [coffeeStoresErr, setCoffeeStoresErr] = useState(null);  // show error somewhere on UI later
    const {handleTrackLocation, locationErrorMsg} = useTrackLocation();

    const {dispatch, state} = useContext(StoreContext);
    const { coffeeStores, latLong } = state;

    const handleOnBannerBtnClick = () => {
        console.log(coffeeStores, 'coffeeStore');
        handleTrackLocation();
    }

    useEffect( () => {
        const fetchCoffeeStoresEffect = async () => {
            if (latLong) {
                try {
                    const fetchedCoffeeStores = await fetchCoffeeStores();
                    dispatch({
                        type: ACTION_TYPE.SET_COFFEE_STORES,
                        payload: {coffeeStores: fetchedCoffeeStores}
                    })
                    // setCoffeeStores(fetchedCoffeeStores);
                    console.log({ fetchedCoffeeStores });
                } catch (err) {
                    // set error
                    setCoffeeStoresErr(err.message);
                    console.log(err);
                }
            }
        }
        fetchCoffeeStoresEffect().then(r => console.log(r));
    }, [dispatch, latLong])

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
            buttonText="View stores nearby"
            handleButtonClick={handleOnBannerBtnClick}
        />
          <div className={styles.heroImage}>
              <Image src="/static/hero-image.png" width={700} height={400} alt="hero-image"/>
          </div>

          {coffeeStores.length > 0 && <div>
              <h2 className={styles.heading2}>Stores near me</h2>
              <div className={styles.cardLayout}>
                  {coffeeStores.map(coffeeStore => {
                      return (
                          <Card
                              key={coffeeStore.fsq_id}
                              imageURL={coffeeStore.imgUrl}
                              name={coffeeStore.name}
                              href={`/coffee-store/${coffeeStore.fsq_id}`}
                              className={styles.card}
                          />
                      )
                  })}
              </div>
          </div>}

          {props.coffeeStores.length > 0 && <div>
              <h2 className={styles.heading2}>Toronto Store</h2>
              <div className={styles.cardLayout}>
                  {props.coffeeStores.map(coffeeStore => {
                      return (
                          <Card
                              key={coffeeStore.fsq_id}
                              imageURL={coffeeStore.imgUrl}
                              name={coffeeStore.name}
                              href={`/coffee-store/${coffeeStore.fsq_id}`}
                              className={styles.card}
                          />
                      )
                  })}
              </div>
          </div>}

      </main>
    </div>
  )
}
